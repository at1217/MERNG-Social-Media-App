[{"/Users/amontokoro/Desktop/Social-Media/client/src/index.js":"1","/Users/amontokoro/Desktop/Social-Media/client/src/App.js":"2","/Users/amontokoro/Desktop/Social-Media/client/src/reportWebVitals.js":"3","/Users/amontokoro/Desktop/Social-Media/client/src/components/ApolloProvider.js":"4","/Users/amontokoro/Desktop/Social-Media/client/src/pages/Login.js":"5","/Users/amontokoro/Desktop/Social-Media/client/src/pages/Home.js":"6","/Users/amontokoro/Desktop/Social-Media/client/src/pages/Register.js":"7","/Users/amontokoro/Desktop/Social-Media/client/src/components/MenuBar.js":"8","/Users/amontokoro/Desktop/Social-Media/client/src/components/PostCard.js":"9","/Users/amontokoro/Desktop/Social-Media/client/src/util/hooks.js":"10","/Users/amontokoro/Desktop/Social-Media/client/src/context/auth.js":"11","/Users/amontokoro/Desktop/Social-Media/client/src/util/AuthRoute.js":"12","/Users/amontokoro/Desktop/Social-Media/client/src/components/PostForm.js":"13","/Users/amontokoro/Desktop/Social-Media/client/src/util/graphql.js":"14","/Users/amontokoro/Desktop/Social-Media/client/src/components/LikeButton.js":"15","/Users/amontokoro/Desktop/Social-Media/client/src/pages/SinglePost.js":"16","/Users/amontokoro/Desktop/Social-Media/client/src/components/DeleteButton.js":"17"},{"size":468,"mtime":1609363457502,"results":"18","hashOfConfig":"19"},{"size":978,"mtime":1609532340335,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1609359560411,"results":"21","hashOfConfig":"19"},{"size":702,"mtime":1609515372044,"results":"22","hashOfConfig":"19"},{"size":2566,"mtime":1609510915108,"results":"23","hashOfConfig":"19"},{"size":1355,"mtime":1609515665761,"results":"24","hashOfConfig":"19"},{"size":3502,"mtime":1609510992004,"results":"25","hashOfConfig":"19"},{"size":1527,"mtime":1609511811779,"results":"26","hashOfConfig":"19"},{"size":1721,"mtime":1609531011999,"results":"27","hashOfConfig":"19"},{"size":432,"mtime":1609443561370,"results":"28","hashOfConfig":"19"},{"size":1438,"mtime":1609512689618,"results":"29","hashOfConfig":"19"},{"size":463,"mtime":1609513282917,"results":"30","hashOfConfig":"19"},{"size":2227,"mtime":1609538915030,"results":"31","hashOfConfig":"19"},{"size":352,"mtime":1609515638645,"results":"32","hashOfConfig":"19"},{"size":1480,"mtime":1609521573956,"results":"33","hashOfConfig":"19"},{"size":3185,"mtime":1609536337553,"results":"34","hashOfConfig":"19"},{"size":1408,"mtime":1609538905829,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"sbrts6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/amontokoro/Desktop/Social-Media/client/src/index.js",[],["73","74"],"/Users/amontokoro/Desktop/Social-Media/client/src/App.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/reportWebVitals.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/components/ApolloProvider.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/pages/Login.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/pages/Home.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/pages/Register.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/components/MenuBar.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/components/PostCard.js",["75","76"],"import React, { useContext } from 'react';\nimport { Card, Icon, Label, Image, Button } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nimport LikeButton from './LikeButton';\nimport { AuthContext } from '../context/auth';\nimport DeleteButton from './DeleteButton';\n\nexport const PostCard = ({ post: {body, createdAt, id, username, likeCount, commentCount, likes }}) => {\n\n    const { user } = useContext(AuthContext);\n\n    const likePost = () => {\n        console.log('Liked Post!');\n    }\n\n    return (\n        <Card fluid>\n            <Card.Content>\n                <Image\n                    floated='right'\n                    size='mini'\n                    src='https://react.semantic-ui.com/images/avatar/large/matthew.png'\n                />\n                <Card.Header>{username}</Card.Header>\n                <Card.Meta as={Link} to={`/posts/${id}`}>{moment(createdAt).fromNow()}</Card.Meta>\n                <Card.Description>\n                   {body}\n                </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                <LikeButton user={user} post={{ id, likes, likeCount }}/>\n                <Button as='div' labelPosition='right' as={Link} to={`/posts/${id}`}>\n                    <Button color='blue' basic>\n                        <Icon name='comments' />\n                    </Button>\n                    <Label basic color='blue' pointing='left'>\n                        {commentCount}\n                    </Label>\n                </Button>\n                { user && user.username === username && <DeleteButton postId={id} />}\n            </Card.Content>\n      </Card>\n    )\n}\nexport default PostCard;","/Users/amontokoro/Desktop/Social-Media/client/src/util/hooks.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/context/auth.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/util/AuthRoute.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/components/PostForm.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/util/graphql.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/components/LikeButton.js",[],"/Users/amontokoro/Desktop/Social-Media/client/src/pages/SinglePost.js",["77","78"],"import React, { useContext } from 'react';\nimport { gql,useQuery } from '@apollo/client';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\nimport { Button, Card, Grid, Image, Icon, Label } from 'semantic-ui-react';\nimport moment from 'moment';\n\nimport { AuthContext} from '../context/auth';\nimport LikeButton from '../components/LikeButton';\nimport DeleteButton from '../components/DeleteButton';\n\nfunction SinglePost(props) {\n    const { user } = useContext(AuthContext);\n    const postId = props.match.params.postId;\n    console.log(postId)\n    const { data: { getPost: post } = {}} = useQuery(FETCH_POST_QUERY, {\n        variables: {postId},\n\n    });\n\n    function deletePostCallback() {\n        props.history.push('/');\n    }\n\n    let postMarkup;\n    if (!post) {\n         postMarkup = <p>Loading post...</p>\n    } else {\n        const { id, body, createdAt, username, comments, likes, likeCount, commentCount } = post;\n\n        postMarkup = (\n            <Grid>\n                <Grid.Row>\n                   <Grid.Column width={2}>\n                    <Image\n                            src='https://react.semantic-ui.com/images/avatar/large/matthew.png'\n                            size=\"small\"\n                            float=\"right\"\n                        />\n                   </Grid.Column>\n                   <Grid.Column width={10}>\n                        <Card fluid>\n                            <Card.Content>\n                                <Card.Header>{username}</Card.Header>\n                                <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\n                                <Card.Description>{body}</Card.Description>\n                            </Card.Content>\n                            <hr/>\n                            <Card.Content extra>\n                                <LikeButton user={user} post={{ id, likeCount, likes }} />\n                                <Button \n                                    as=\"div\"\n                                    labelPosition=\"right\"\n                                    onClick={() => console.log('Comment on post')}\n                                >\n                                    <Button basic color=\"blue\">\n                                        <Icon name=\"comments\" />\n                                    </Button>\n                                    <Label basic color=\"blue\" pointing=\"left\">{commentCount}</Label>\n                                </Button>\n                            {user && user.username === username && (\n                                <DeleteButton postId={id} callback={deletePostCallback}/>\n                            )}\n                            </Card.Content>\n                        </Card>\n                   </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n    return postMarkup;\n}\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport default SinglePost;","/Users/amontokoro/Desktop/Social-Media/client/src/components/DeleteButton.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":14,"column":11,"nodeType":"85","messageId":"86","endLine":14,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":34,"column":56,"nodeType":"89","endLine":34,"endColumn":65},{"ruleId":"83","severity":1,"message":"90","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":27},{"ruleId":"83","severity":1,"message":"91","line":28,"column":48,"nodeType":"85","messageId":"86","endLine":28,"endColumn":56},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'likePost' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'FETCH_POSTS_QUERY' is defined but never used.","'comments' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]